@model IPagedList<Netflex.Models.Blog.BlogViewModel>

@{
    ViewData["Title"] = "Blog Management";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">


    <!-- Filter & Search Form -->
    <form id="filterForm" method="get" action="@Url.Action("Index", "BlogManagement")">
        <input type="hidden" id="hiddenSearchTerm" name="searchTerm" />
        <input type="hidden" id="hiddenCreaterId" name="createrId" />
        <input type="hidden" id="hiddenCreaterName" name="createrName" />
        <input type="hidden" id="hiddenCreatedAt" name="createdAt" />
        <input type="hidden" id="hiddenSortOrder" name="sortOrder" />

        <div class="d-flex justify-content-between align-items-center my-4">
            <h2 class="fw-bold text-primary">📑 Blog Management</h2>
            <div>
                <a class="btn btn-success btn-lg" asp-area="" asp-controller="BlogManagement" asp-action="Create"><i
                        class="fa fa-plus"></i> Create New</a>
                <a href="@Url.Action("ExportToExcel", new { searchTerm = ViewBag.SearchTerm, createrId = ViewBag.CreaterId, createdAt = ViewBag.CreatedAt, sortOrder = ViewBag.SortOrder })"
                    class="btn btn-info btn-lg ms-2">
                    <i class="fa fa-download"></i> Export to Excel
                </a>
            </div>
        </div>

        <!-- Filter & Search Bar -->
        <div class="row mb-4">
            <!-- Search by Title or ID -->
            <div class="col-md-3">
                <input type="text" id="searchInput" class="form-control border-primary shadow-sm"
                    placeholder="🔍 Search by title or ID..." />
            </div>

            <!-- Filter by Creator ID -->
            <div class="col-md-3">
                <input type="text" id="createrNameInput" class="form-control border-secondary shadow-sm"
                    placeholder="🔍 Filter by Creator Name..." />
            </div>

            <!-- Filter by CreatedAt Date -->
            <div class="col-md-3">
                <input type="date" id="filterDate" class="form-control border-secondary shadow-sm" />
            </div>

            <!-- Reset Filters Button -->
            <div class="col-md-1">
                <button class="btn btn-outline-secondary w-100" onclick="resetFilters()">Reset Filters</button>
            </div>
            <div class="col-md-2">
                <button class="btn btn-outline-secondary w-100" type="button" id="filterButton">Apply Filters</button>
            </div>
        </div>

        <!-- Sorting Options -->
        <div class="row mb-4">
            <div class="col-md-3">
                <select id="sortOrderSelect" class="form-control" onchange="setSortOrder(this.value)">
                    <option value="title">Title (Ascending)</option>
                    <option value="title_desc">Title (Descending)</option>
                    <option value="created_at">Created At (Ascending)</option>
                    <option value="created_at_desc">Created At (Descending)</option>
                    <option value="creater_id">Creator ID (Ascending)</option>
                    <option value="creater_id_desc">Creator ID (Descending)</option>
                </select>
            </div>
        </div>
    </form>

    <!-- Responsive Table with Fixed Header -->
    <div class="table-responsive-lg" style="max-height: 600px; overflow-y: auto;">
        <table class="table table-hover table-bordered align-middle shadow-lg table-lg">
            <thead class="table-dark position-sticky top-0">
                <tr>
                    <th style="min-width: 150px;">Title</th>
                    <th style="min-width: 300px;">Content</th>
                    <th style="min-width: 150px; text-align: center;">Thumbnail</th>
                    <th style="min-width: 100px;">Created At</th>
                    <th style="min-width: 150px;">Creater ID</th>
                    <th style="min-width: 120px; text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-truncate" style="max-width: 250px;">
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td class="text-truncate" style="max-width: 400px; max-height: 100px;">
                            @Html.Raw(item.Content.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)
                        </td>
                        <td class="text-center">
                            @if (!string.IsNullOrEmpty(item.Thumbnail))
                            {
                                <img src="@item.Thumbnail" alt="Thumbnail" class="img-fluid rounded"
                                    style="max-width: 100px; height: auto;" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.CreatorName)
                        </td>

                        <td class="text-center action-column">
                            <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Sửa</a>
                            <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Chi tiết</a>
                            <a class="btn btn-danger btn-sm delete" data-id="@item.Id" 
                                data-url="/dashboard/blog/delete" data-body-message="Bạn có muốn xóa bài viết này không?"
                                data-redirect-url="/dashboard/blog">Xóa</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            <ul class="pagination">
                <!-- Previous Page Link -->
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="/dashboard/blog?page=@(Model.PageNumber - 1)">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Previous</span>
                    </li>
                }

                <!-- Page Number Links -->
                @for (var i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="/dashboard/blog?page=@i">@i</a>
                    </li>
                }

                <!-- Next Page Link -->
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="/dashboard/blog?page=@(Model.PageNumber + 1)">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Next</span>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        document.getElementById('filterButton').addEventListener('click', function () {
            document.getElementById('hiddenSearchTerm').value = document.getElementById('searchInput').value;
            document.getElementById('hiddenCreaterName').value = document.getElementById('createrNameInput').value;
            document.getElementById('hiddenCreatedAt').value = document.getElementById('filterDate').value;
            submitForm();
        });

        document.getElementById('searchInput').addEventListener('input', function () {
            document.getElementById('hiddenSearchTerm').value = this.value;
        });

        document.getElementById('createrNameInput').addEventListener('input', function () {
            document.getElementById('hiddenCreaterName').value = this.value;
        });

        document.getElementById('filterDate').addEventListener('change', function () {
            document.getElementById('hiddenCreatedAt').value = this.value;
        });

        function submitForm() {
            document.getElementById('filterForm').submit();
        }

        function resetFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('createrIdInput').value = '';
            document.getElementById('filterDate').value = '';
            document.getElementById('hiddenSearchTerm').value = '';
            document.getElementById('hiddenCreaterName').value = '';
            document.getElementById('hiddenCreatedAt').value = '';
            submitForm();
        }

        function setSortOrder(order) {
            document.getElementById('hiddenSortOrder').value = order;
            submitForm();
        }

    </script>
    <script type="text/javascript">
        function confirmDelete() {
            return confirm("Bạn có đồng ý Xóa bài viết này không?");
        }
    </script>
}
