@model IPagedList<Netflex.Models.Search.SearchItemViewModel>
@using X.PagedList.Mvc.Core

@{
	Layout = "_Layout";
	ViewData["Title"] = "Search";
}

@{
	var title = Context.Request.Query["title"];
}
<div class="container">
	<div class="d-flex align-items-center my-3">
		<div class="vertical-line"></div>
		<p class="ms-2 mb-0 text-md text-white fw-bold">Kết quả tìm kiếm: @title</p>
	</div>

	@if (Model.Count == 0)
	{
		<form class="search-box" action="@Url.Action("index", "search")">
			<input class="search" type="text" placeholder="Tìm kiếm phim..." name="title" value="@title">
		</form>
		<h5 class="text-white text-center my-3">Phim đang được cập nhật!</h5>
	}
	else
	{
		<form class="search-box" action="@Url.Action("index", "search")">
			<input class="search" type="text" placeholder="Tìm kiếm phim..." name="title" value="@title">
		</form>

		<div class="my-3 movie-list">
			@foreach (var item in Model)
			{
				<div class="movie-item">
					<a href="@(item.Type == "Film" ? @Url.Action("detail", "film", new { id = item.Id }) 
                :  @Url.Action("detail", "serie", new { id =item.Id }))" class="text-white">
						<div class="card bg-transparent text-white mb-1 ">
							<div class="d-flex gap-4 movie-banner">
								<div class=" position-relative">
									<img src="@item.Poster" alt="@item.Title" class="movie-image">
									<div class="position-absolute top-0 end-0 text-sm text-center"
										style="background-color: @(item.Type == "Film" ? "#28a745" :  "#a72828")">
										<p class="m-0 p-1 text-white-70">@(item.Type == "Film" ? "Phim lẻ" : "Phim bộ")</p>
									</div>
								</div>
								<div class="flex-grow-1 overflow-hidden">
									<p class="m-0">@item.Title</p>
									<p class="text-white-50 m-0 text-sm">@item.ProductionYear</p>
									@if (item.About is not null)
									{
										<p class="text-white-50 m-0 text-sm">@Html.Raw(item.About.Length > 300 ?
											item.About.Substring(0, 300) +
											"..." : item.About)</p>
									}
								</div>
							</div>
						</div>
					</a>
				</div>
			}
		</div>

		@if (Model.PageCount >= 1)
		{
			<div class="row">
				<nav class="text-sm">
					<ul class="pagination d-flex gap-2">
						<li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
							<a class="page-link" href="@Url.Action("index", new { page = Model.PageNumber - 1 })">‹</a>
						</li>

						@for (int i = 1; i <= Model.PageCount; i++)
						{
							if (Model.PageCount > 5 && (i > 2 && i < Model.PageNumber - 1 || i < Model.PageCount - 1 && i >
							Model.PageNumber + 1))
							{
								if (i == 3 || i == Model.PageCount - 2)
								{
									<li class="page-item disabled"><span class="page-link">...</span></li>
								}
								continue;
							}
							<li class="page-item @(i == Model.PageNumber ? "active" : "")">
								<a class="page-link" href="@Url.Action("index", new { page = i })">@i</a>
							</li>
						}

						<li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
							<a class="page-link" href="@Url.Action("index", new { page = Model.PageNumber + 1 })">›</a>
						</li>
					</ul>
				</nav>
			</div>
		}
	}
</div>
