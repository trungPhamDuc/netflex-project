@model IPagedList<Netflex.Models.Follow.FollowViewModel>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Phim yêu thích";
    Layout = "_Layout";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mt-3">
        <div class="d-flex align-items-center">
            <div class="vertical-line"></div>
            <p class="ms-2 mb-0 text-md text-white fw-bold">Đã theo dõi</p>
        </div>
    </div>

    <div class="movie-list my-3">
        @foreach (var item in Model)
        {
            string itemType = "";

            var film = item.FollowedFilms;
            var serie = item.FollowedSeries;

            if (film != null)
            {
                itemType = "Phim lẻ";
            }
            else if (serie != null)
            {
                itemType = "Phim bộ";
            }

            <div class="movie-item d-flex justify-content-between align-items-center follow-item">
                <a href="@(film != null ? @Url.Action("detail", "film", new { id = film.Id }) 
                : (serie != null ? @Url.Action("detail", "serie", new { id =serie.Id }) : ""))" class="text-white">
                    <div class="card bg-transparent text-white mb-1 ">
                        <div class="d-flex gap-4 movie-banner">
                            <div class=" position-relative">
                                <img src="@(film != null ? film.Poster : (serie != null ? serie.Poster : ""))"
                                    class="movie-image"
                                    alt="@(film != null ? film.Title : (serie != null ? serie.Title : ""))">
                                <div class="position-absolute top-0 end-0 text-sm text-center"
                                    style="background-color: @(film != null ? "#28a745" : (serie != null ? "#a72828" : ""));">
                                    <p class="m-0 p-1 text-white-70">@itemType</p>
                                </div>
                            </div>
                            <div class="flex-grow-1 overflow-hidden">
                                <p class="m-0">@(film != null ? film.Title : (serie != null ? serie.Title : ""))</p>
                                <p class="text-white-50 m-0 text-sm">@(film != null ? film.ProductionYear : (serie != null ?
                                serie.ProductionYear : ""))</p>
                                <p class="text-white-50 m-0 text-sm">
                                    @{
                                        var about = film?.About ?? serie?.About ?? "";
                                        var truncatedAbout = about.Length > 100 ? about.Substring(0, 100) + "..." : about;
                                    }
                                    @truncatedAbout
                                </p>
                            </div>
                        </div>
                    </div>
                </a>

                <a class="col-md-1" href="javascript:void(0);" data-id="@item.Id" onclick="deleteFollow(this)">
                    <i class="fa-solid fa-xmark fa-lg" style="color: rgb(190, 190, 190);"></i>
                </a>
            </div>
        }
    </div>

    @if (Model.PageCount >= 1)
    {
        <div class="row">
            <nav class="text-sm">
                <ul class="pagination d-flex gap-2">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("index", new { page = Model.PageNumber - 1 })">‹</a>
                    </li>

                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        if (Model.PageCount > 5 && (i > 2 && i < Model.PageNumber - 1 || i < Model.PageCount - 1 && i >
                        Model.PageNumber + 1))
                        {
                            if (i == 3 || i == Model.PageCount - 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                            continue;
                        }
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("index", new { page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("index", new { page = Model.PageNumber + 1 })">›</a>
                    </li>
                </ul>
            </nav>
        </div>
    }

</div>

@section Scripts {
    <script>
        function deleteFollow(button) {
            const followId = button.getAttribute('data-id');
            const followItem = button.closest('.follow-item');

            button.innerHTML = '<i class="fa-solid fa-spinner fa-spin fa-lg" style="color:rgb(190, 190, 190)"></i>';

            fetch(`/follow/delete/${followId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                }
            })
                .then(response => {
                    if (response.ok) {
                        followItem.style.transition = "opacity 0.5s ease";
                        followItem.style.opacity = "0";
                        setTimeout(() => followItem.remove(), 500);
                    } else {
                        return response.text().then(text => { throw new Error(text) });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`Error deleting follow: ${error.message}`);
                    button.innerHTML = '<i class="fa-solid fa-xmark fa-lg" style="color: rgb(190, 190, 190);"></i>';
                });
        }
    </script>
}
